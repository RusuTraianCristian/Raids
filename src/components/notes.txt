react updates the virtual DOM automatically
react state gets rendered when modified automatically in the memory
or on the page if called
state is lost on refresh because it's just Javascript
to save state, you either push it to localStorage or to a server. or both.
this way, it will persist after refresh

what redux does is it simplifies state management
instead of passing state via props (React way) and drill for it in a hard way, with redux you simply push it to a store
and call it from whatever component that was subscribed to the store. it provides a single source of truth and ease of usage
but it wont persist


so state can be set called and passed with react via props (the hard way with drilling)
or with redux (the easy way) with a single source of truth

either cases, it wont persist. to persist, you save it to localStorage or server or both and call it.
this way it persists after refresh

ow learn to re-render component after state was changed via either react passing props either via updated redux store.

learn all these and you're on the right path! <3

Exercise:

create a simple component set a state and reflect changes in real time without refresh
pass state to another component via props
re-render a child component after its state was changed via props and reflect state change without refresh
make state persist after refresh localStorage AND server and share it across the entire app

create a simple component set a state and reflect changes in real time without refresh
pass state to another Component via redux
re-render a child component after its state was changed via redux and reflect state change without refresh
make state persist after refresh localStorage AND server and share it across the entire app
